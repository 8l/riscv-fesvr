#! /usr/bin/python

import os
import sys
from fesvr_htif import *
from fesvr_tmif import *

pkrun = True
simtype = 0 # isa=0,rtl=1,2=fpgartl,3=rs232

htif_args = []
start = 1
for a in sys.argv[1:]:
  if len(a) > 1 and (a[0] == '-' or a[0] == '+'):
    start = start+1
    if a == '-testrun':
      pkrun = False
    elif a == '-rtl':
      simtype = 1
    elif a == '-gl':
      simtype = 1
      htif_args += ['-ucli','-do','run.tcl']
    elif a == '-fpgartl':
      simtype = 2
    elif a == '-rs232':
      simtype = 3
    else:
      htif_args.append(a)
  else:
    break
args = sys.argv[start:]

if pkrun:
  kernel = ''
  for path in os.getenv('PATH').split(':'):
    test = path + '/riscv-pk'
    if os.access(test, os.F_OK):
      kernel = test
      break
  if kernel == '':
    print "can't find riscv-pk in PATH"
    sys.exit(-1)

if len(args) < 1:
  print "usage: %s bin [args]" % sys.argv[0]
  sys.exit(-1)

if simtype == 0:
  htif = htif_isasim_t(htif_args)
elif simtype == 1:
  htif = htif_rtlsim_t(htif_args)
elif simtype == 2:
  htif = htif_fpga_rtlsim_t(htif_args)
elif simtype == 3:
  htif = htif_rs232_t(htif_args)
else:
  assert 0, "unspecified simtype"

tmif = tmif_t(htif)

if pkrun:
  tmif.load_elf(kernel) # pk
  target_argv = args
  target_argc = len(target_argv)
  tmif.mainvars_argc(target_argc)
  for i in range(target_argc):
    tmif.mainvars_argv(i, len(target_argv[i]), target_argv[i])

tmif.load_elf(args[0]) # bin

tmif.start()

if pkrun:
  while True:
    mm = tmif.run_until_tohost()
    tmif.syscall(mm)
    tmif.write_fromhost(1)
else:
  code = tmif.run_until_tohost()
  if code == 1:
    print "*** PASSED ***"
  else:
    print "*** FAILED *** (tohost = %d)" % code
  if simtype > 0:
    tmif.stop()
  else:
    htif.kill()
